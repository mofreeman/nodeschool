
 LEARN YOU THE NODE.JS FOR MUCH WIN!
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 HTTP CLIENT
 Exercise 7 of 13

Write a program that performs an HTTP GET request to a URL provided to you as the first command-line argument. Write the String contents of each "data" event from the response to a new line on the console (stdout).

-------------------------------------------------------------------------------

## HINTS

For this exercise you will need to use the http core module.

Documentation on the http module can be found by pointing your browser here:
  file:///usr/local/lib/node_modules/learnyounode/node_apidoc/http.html

The http.get() method is a shortcut for simple GET requests, use it to simplify your solution. The first argument to http.get() can be the URL you want to GET, provide a callback as the second argument.

Unlike other callback functions, this one has the signature:

    [94mfunction[39m [37mcallback[39m [90m([39m[37mresponse[39m[90m)[39m [33m{[39m [90m/* ... */[39m [33m}[39m

Where the response object is a Node Stream object. You can treat Node Streams as objects that emit events, the three events that are of most interest are: "data", "error" and "end". You listen to an event like so:

    [37mresponse[39m[32m.[39m[37mon[39m[90m([39m[92m"data"[39m[32m,[39m [94mfunction[39m [90m([39m[37mdata[39m[90m)[39m [33m{[39m [90m/* ... */[39m [33m}[39m[90m)[39m

The "data" is emitted when a chunk of data is available and can be processed. The size of the chunk depends upon the underlying data source.

The response object / Stream that you get from http.get() also has a setEncoding() method. If you call this method with "utf8", the "data" events will emit Strings rather than the standard Node Buffer objects which you have to explicitly convert to Strings.

-------------------------------------------------------------------------------

 Â» To print these instructions again, run: learnyounode print
 Â» To execute your program in a test environment, run: learnyounode run program.js
 Â» To verify your program, run: learnyounode verify program.js
 Â» For help run: learnyounode help


